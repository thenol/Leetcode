'''
时间限制：C/C++ 1秒，其他语言2秒

空间限制：C/C++ 256M，其他语言512M

小Q在进行一场竞技游戏,这场游戏的胜负关键就在于能否能争夺一条长度为L的河道,即可以看作是[0,L]的一条数轴。
这款竞技游戏当中有n个可以提供视野的道具−真视守卫,第i个真视守卫能够覆盖区间[xi,yi]。现在小Q想知道至少用几个真视守卫就可以覆盖整段河道。 

输入描述:
输入包括n+1行。

第一行包括两个正整数n和L(1<=n<=105,1<=L<=109)

接下来的n行,每行两个正整数xi,yi(0<=xi<=yi<=109),表示第i个真视守卫覆盖的区间。 


输出描述:
一个整数，表示最少需要的真视守卫数量, 如果无解, 输出-1。

输入例子1:
4 6
3 6
2 4
0 2
4 7

输出例子1:
3

输入例子2：
100 900
507 992
30 807
875 918
226 400
41 574
370 686
486 699
500 727
140 775
958 971
702 987
79 556
620 847
437 719
184 230
566 866
112 891
0 580
370 809
42 845
445 728
327 818
699 888
190 927
810 977
369 974
523 731
549 810
785 904
394 998
124 615
90 278
121 720
110 350
189 492
349 730
427 851
335 590
537 973
95 289
714 777
1 434
117 693
788 851
231 851
518 960
227 878
162 743
150 153
99 429
455 926
378 849
734 892
617 913
64 650
536 795
829 845
30 933
912 961
201 546
332 834
401 781
68 643
208 386
777 850
169 313
766 775
233 387
418 608
763 902
444 931
562 571
429 738
348 750
65 157
140 919
88 788
6 674
248 767
954 977
810 964
27 95
146 767
442 742
446 630
422 715
180 513
585 879
514 777
236 963
156 427
747 773
499 907
241 635
222 433
945 962
137 750
297 519
399 573
349 531

输出例子2:
2
'''
n,l=list(map(int,input().strip().split(' ')))
nums=[]
for i in range(n):
    nums.append(list(map(int,input().strip().split(' '))))
nums.sort()
#print(nums)
if nums[-1][1]<l:print(-1)
else:
    start=-1
    count=0
    for i in range(1,n):
        if nums[i][0]>start:
            count+=1
            start=nums[i-1][1]
    print(count)
